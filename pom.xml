<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.apps</groupId>
    <artifactId>scheduler-app</artifactId>
    <version>1.0.1</version>
    <packaging>jar</packaging>

    <name>Scheduler App</name>
    <description>Scheduler micro service scheduler app</description>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
        <relativePath/>
    </parent>

    <properties>
        <plexus-utils.version>3.3.0</plexus-utils.version>
        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <!-- Application Dependencies -->
        <fis-dependency-management-all.version>2.0.0.redhat-8</fis-dependency-management-all.version>
        <qpid-jms-client.version>0.29.0</qpid-jms-client.version>
        <couchbase-spring-boot-autoconfigure.version>1.0.0</couchbase-spring-boot-autoconfigure.version>
        <quartz.version>2.3.0</quartz.version>
        <commons-lang.version>3.2.1</commons-lang.version>
        <commons-cli.version>1.2</commons-cli.version>
        <commons.version>2.5</commons.version>
        <rsa.version>3.5</rsa.version>
        <httpclient.version>4.5.5</httpclient.version>
        <httpasyncclient.version>4.1.3</httpasyncclient.version>
        <json.org.version>20160810</json.org.version>
        <spring-cloud-dependencies.version>Greenwich.RELEASE</spring-cloud-dependencies.version>
        <fasterxml-jackson>2.10.2</fasterxml-jackson>

        <!-- Camel -->
        <camel.version>2.22.2</camel.version>
        <activemq-camel.version>5.15.8</activemq-camel.version>
        <lombok.version>1.18.12</lombok.version>

        <!-- Swagger Dependencies -->
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>
        <springfox-swagger-ui.version>2.9.2</springfox-swagger-ui.version>

        <!-- WebSphere MQ -->
        <wmq.version>9.0.0.7</wmq.version>
        <jta.version>1.1</jta.version>

        <!-- JAXB plugins -->
        <maven-jaxb2-plugin.version>0.13.1</maven-jaxb2-plugin.version>
        <jaxb2.commons.basics.annotate.version>0.6.3</jaxb2.commons.basics.annotate.version>
        <jaxb2.commons.basics.version>0.6.3</jaxb2.commons.basics.version>
        <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>

        <!-- Reporting Plugins -->
        <asm.version>5.1</asm.version>
        <maven-pmd-plugin.version>3.6</maven-pmd-plugin.version>
        <maven-findbugs-plugin.version>3.0.3</maven-findbugs-plugin.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-cobertura-plugin.version>2.7</maven-cobertura-plugin.version>
        <maven-taglist-plugin.version>2.4</maven-taglist-plugin.version>
        <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>

        <!-- Testing Plugins -->
        <maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
        <!-- Reporting Configurations -->
        <sonar.host.url>http://wkst00008eba.tus.ams1907.com:9000</sonar.host.url>
        <sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${build.outputDirectory}/jacoco.exec</sonar.jacoco.reportPath>
        <!-- Jacoco version to use -->
        <jacoco.version>0.7.9</jacoco.version>
        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per
            test -->
        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
        <!-- Don't let Sonar execute tests. We will ask it to Maven 'sonar.dynamicAnalysis'
            is deprecated since version 4.3 and should no longer be used. -->
        <!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->
        <!-- The system property jacoco.outputDir needs to be override on the command
            line with an absolute path if you want to merge results from all modules.
            Example in a Jenkisn build where ${WORKSPACE} is defined and your project
            in the root directory of the workspace : mvn clean install -Prun-its,coverage
            -Djacoco.outputDir=${WORKSPACE}/target Note that unfortunately using the
            following does not work because of http://jira.codehaus.org/browse/SONAR-3427:
            <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir> -->
        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
        <!-- Jacoco output file for UTs -->
        <jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for Unit
            Tests -->
        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
        <!-- Jacoco output file for ITs -->
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for Integration
            Tests -->
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
        <sonar.junit.reportsPath>${project.build.directory}/surefire-reports/</sonar.junit.reportsPath>
        <sonar.tests>src/test/java</sonar.tests>
    </properties>    

    <dependencies>
        <!--Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <!-- Runtime -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-quartz2-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <!-- Runtime - Spring starter modules -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-artemis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-quartz2</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <!--Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-amqp</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.qpid</groupId>
            <artifactId>qpid-jms-client</artifactId>
            <version>${qpid-jms-client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-gson</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
            <version>${activemq-camel.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-docs</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <forkCount>3</forkCount>
                    <reuseForks>true</reuseForks>
                    <argLine>${argLine} -Xmx1024m -XX:MaxPermSize=256m</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*Documentation.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${argLine}</argLine>
                            <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
                            <!--<skipTests>${skip.integration.tests}</skipTests>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>    
</project>